import os
import random

def clear_screen():
    # Check the OS and execute the appropriate command
    if os.name == 'nt':
        os.system('cls')

# Initial UI options
ui_choices = ["Play", "Menu", "Options", "Exit"]

print("\nWelcome to EduQuest! Where it's fun learning")

# Main menu loop
while True:
    user_answer = str(input("Choose one of the following options: Play, Menu, Options: ")).capitalize()

    if user_answer == "Play":
        print("Wonderful! \nGame Starting....")
        break
    elif user_answer in ["Menu", "Options"]:
        print(f"You chose {user_answer}.")
        break
    else:
        print('Invalid choice. Please try again.')

# Dictionary of banned words
banned_words = {
    "the", "is", "are", "on", "in", "at", "she", "he", "a", "an", "or", "for",
    "that", "this", "by", "was", "were", "they", "their", "there", "be", "with",
    "to", "from", "and", "but", "so", "yet", "I", "you", "it", "we", "have", 
    "has", "do", "can", "will", "said", ","
}

# Function to split a sentence into words and store them in a dictionary
def store_sentence_in_dict(sentence):
    global words
    global No_no_words

    # Split the sentence into words and convert to lowercase
    words = sentence.lower().split()

    # Filter out banned words silently (no print statements)
    No_no_words = [word for word in words if word not in banned_words]

    # Create a dictionary to store the words
    word_dict = {}
    for i, word in enumerate(words):
        word_dict[f"word_{i+1}"] = word
    
    return word_dict

def display_sentence(sentence):
    return ' '.join(sentence)

def play_game():
    health = 5
    correct_streak = 0
    wrong_answers = 0

    # Get the user input for the question
    user_input = str(input("Enter a sentence (question): "))
    word_dict = store_sentence_in_dict(user_input)

    if not No_no_words:
        print("No eligible words to guess. Please enter a different sentence.")
        return

    # Number of words to blank out
    num_words_to_blank = int(input(f"How many words do you wish to blank out? (Max: {len(No_no_words)}) "))
    num_words_to_blank = min(num_words_to_blank, len(No_no_words))

    # Randomly choose words to blank from the user input ignoring banned words
    selected_words = random.sample(No_no_words, num_words_to_blank)

    # Create a modified sentence with blanks
    modified_sentence = words.copy()
    for word in selected_words:
        for i in range(len(modified_sentence)):
            if modified_sentence[i] == word:
                modified_sentence[i] = "_____"
                break  # Replace only the first occurrence

    guessed_words = set()
    blanks = {word: word for word in selected_words}

    while blanks and health > 0:
        # Clear the screen before showing the updated sentence and health
        clear_screen()
        
        print("\nGuess the missing words:")
        print(display_sentence(modified_sentence))
        print(f"Health remaining: {health}")

        guess = input("\nGuess a missing word: ").strip().lower()

        if guess in guessed_words:
            print("You already guessed that word. Try another one.")
            continue

        guessed_words.add(guess)

        correct = False
        indices_correct = []
        for word in list(blanks.values()):
            if guess == word.lower():
                # Fill in the correct word in the modified sentence
                for idx in range(len(modified_sentence)):
                    if modified_sentence[idx] == "_____":
                        modified_sentence[idx] = word
                        indices_correct.append(word)
                        correct = True
                        break

        if correct:
            print("Correct!")
            correct_streak += 1
            for word in indices_correct:
                del blanks[word]
        else:
            health -= 1
            wrong_answers += 1
            correct_streak = 0
            print(f"Incorrect! You lose a health point. Health remaining: {health}")

    # Game summary
    clear_screen()
    print("\nGame Summary:")
    print(f"Health remaining: {health}")
    print(f"Wrong answers: {wrong_answers}")
    print(f"Correct streak: {correct_streak}")

    if health > 0:
        print("\nCongratulations! You've completed the game.")
    else:
        print("\nGame Over! You've run out of health.")

if __name__ == "__main__":
    play_game()
